(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{304:function(a,t,e){"use strict";e.r(t);var r=e(13),s=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"back-end"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#back-end"}},[a._v("#")]),a._v(" back end")]),a._v(" "),t("h2",{attrs:{id:"node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[a._v("#")]),a._v(" node")]),a._v(" "),t("p",[a._v("基于 Chrome V8 引擎的 JavaScript 运行环境")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://nodejs.cn/api/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Node.js v14.15.3 文档"),t("OutboundLink")],1)])]),a._v(" "),t("h2",{attrs:{id:"python"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#python"}},[a._v("#")]),a._v(" Python")]),a._v(" "),t("p",[a._v("跨平台的计算机程序设计语言。 是一个高层次的结合了解释性、编译性、互动性和面向对象的脚本语言。最初被设计用于编写自动化脚本(shell)，随着版本的不断更新和语言新功能的添加，逐渐被用于独立的、大型项目的开发。")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1016959663602400/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Python教程"),t("OutboundLink")],1)])]),a._v(" "),t("h2",{attrs:{id:"服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务器"}},[a._v("#")]),a._v(" 服务器")]),a._v(" "),t("h3",{attrs:{id:"nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[a._v("#")]),a._v(" Nginx")]),a._v(" "),t("p",[a._v("高性能的HTTP和反向代理web服务器")]),a._v(" "),t("h3",{attrs:{id:"apache"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apache"}},[a._v("#")]),a._v(" Apache")]),a._v(" "),t("p",[a._v("阿帕奇是世界使用排名第一的Web服务器软件")]),a._v(" "),t("h3",{attrs:{id:"tomcat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tomcat"}},[a._v("#")]),a._v(" Tomcat")]),a._v(" "),t("p",[a._v("Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。")]),a._v(" "),t("h2",{attrs:{id:"database"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#database"}},[a._v("#")]),a._v(" Database")]),a._v(" "),t("h3",{attrs:{id:"mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[a._v("#")]),a._v(" MySql")]),a._v(" "),t("p",[a._v("关系型数据库管理系统。关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。")]),a._v(" "),t("h3",{attrs:{id:"mongodb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mongodb"}},[a._v("#")]),a._v(" MongoDB")]),a._v(" "),t("p",[a._v("一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。它支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是它支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("高性能、易部署、易使用，存储数据非常方便")]),a._v(" "),t("ul",[t("li",[a._v("面向集合存储，易存储对象类型的数据。")]),a._v(" "),t("li",[a._v("支持动态查询。")]),a._v(" "),t("li",[a._v("支持完全索引，包含内部对象。")])])]),a._v(" "),t("li",[t("p",[a._v("所谓“面向集合”（Collection-Oriented），意思是数据被分组存储在数据集中，被称为一个集合（Collection)。每个集合在数据库中都有一个唯一的标识名，并且可以包含无限数目的文档。集合的概念类似关系型数据库（RDBMS）里的表（table），不同的是它不需要定义任何模式（schema)。")])])]),a._v(" "),t("h3",{attrs:{id:"redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[a._v("#")]),a._v(" Redis")]),a._v(" "),t("p",[a._v("远程字典服务，是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。")])])}),[],!1,null,null,null);t.default=s.exports}}]);